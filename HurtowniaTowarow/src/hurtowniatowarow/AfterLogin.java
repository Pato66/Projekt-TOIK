/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hurtowniatowarow;

import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Klasa dla zalogowanego uzytkownika udostepniajaca mu odpowiednie metody pozwalajace na: 
 * złozenie zamówienia, edycje profilu z podglądem aktualnych danych, sprawdzenie historii zamówień.
 * @author Patryk
 */
public class AfterLogin extends JFrame {
    String log;
    JFrame jf2;
    /**
     * Konstrtor bezargumewnowy ppozwalajacy na testowanie różnych ustawień bez uruchamiania całej aplikacji
     */
    public AfterLogin() {
        initComponents();
        getContentPane().setBackground(new Color(70,160,250));
        setVisible(true);
        setResizable(false);
    }
    /**
     * Konstruktor dwuargumentowy pozwalajacy zapamietac uchwyt do poprzedniego okan oraz login właśnie zalogowanego użytkownika
     * @param log przekazuje do klasy login uzytkownika, ktory własnnie zalogował się do systemu.
     * Nastepnie login ten jest wyświetlany w lewym górnym rogu.
     * @param jf2 jest to uchwyt do poprzedniego okna - LogForm który umożliwia płynne przejscie po wylogowaniu sie z systemu 
     * ponownie do ekranu umożliwiającego zalogowanie
     */
    public AfterLogin(String log,JFrame jf2) {
        initComponents();
        getContentPane().setBackground(new Color(70,160,250));
        this.log=log;
        this.jf2=jf2;
        powitanie.setText("Jestes zalogowany jako "+log);
        setVisible(true);
        setResizable(false);
    }
    /**
     * Konstruktor trójargumentowy wywoływany w sytuacji rozpoznania że właśnie zalogowany user nie ma uzupełnionych danych osobowych. 
     * Przez to nie może on zamawiać towarów zhurtowni.
     * @param log przekazuje do klasy login uzytkownika, ktory własnnie zalogował się do systemu.
     * Nastepnie login ten jest wyświetlany w lewym górnym rogu.
     * @param jf2 jest to uchwyt do poprzedniego okna - LogForm który umożliwia płynne przejscie po wylogowaniu sie z systemu 
     * ponownie do ekranu umożliwiającego zalogowanie
     * @param w dodatkowy parametr typu integer umozliwiający rozpoznanie tego, że własnie zalogowany user nie uzupełnił wszystkich swoich
     * danych personalnych, w związku z czym nie może zamowić zadnych towarów. Dodatkowo parametr ten powoduje, że jest wyswietlane okno z odpowiednim 
     * [powiadomieniem ostrzegajacym o niekompletnych danych
     */
     public AfterLogin(String log,JFrame jf2,int w) {
        initComponents();
        getContentPane().setBackground(new Color(70,160,250));
        this.log=log;
        this.jf2=jf2;
        powitanie.setText("Jestes zalogowany jako "+log);
        setVisible(true);
        setResizable(false);
        JOptionPane.showMessageDialog(this, "Uzupelnij swoj profil w zakładce \nEdytuj profil aby mieć \nmożliwość zamawiania ze sklepu");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        powitanie = new javax.swing.JLabel();
        zamawiaj = new javax.swing.JButton();
        rezerwacje = new javax.swing.JButton();
        edytuj = new javax.swing.JButton();
        wyloguj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        powitanie.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        powitanie.setText("...");

        zamawiaj.setText("Zamawiaj");
        zamawiaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamawiajActionPerformed(evt);
            }
        });

        rezerwacje.setText("Twoje rezerwacje");
        rezerwacje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rezerwacjeActionPerformed(evt);
            }
        });

        edytuj.setText("Edytuj profil");
        edytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytujActionPerformed(evt);
            }
        });

        wyloguj.setText("Wyloguj się");
        wyloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wylogujActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(powitanie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rezerwacje, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zamawiaj, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edytuj, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wyloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 95, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(powitanie)
                .addGap(66, 66, 66)
                .addComponent(zamawiaj, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(rezerwacje, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(edytuj, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(wyloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(185, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Metoda powodująca wylogowanie się z systemu i powrót do okna - LogForm
     * @param evt 
     */
    private void wylogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wylogujActionPerformed
        this.dispose();
        jf2.setVisible(true);
    }//GEN-LAST:event_wylogujActionPerformed
    /**
     * Metoda umozliwiajaca zamawianie nowych towarów, przenosząca do nowego okna Order 
     * @param evt 
     */
    private void zamawiajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamawiajActionPerformed
        JFrame j3=this;
        j3.setVisible(false);
        Order okno4 =new Order(j3,log);
    }//GEN-LAST:event_zamawiajActionPerformed
    /**
     * Metoda pozwalająca na edycje swoich danych. Aktualne dane sa wczytywane po pojawieniu się okna.
     * @param evt 
     */
    private void edytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytujActionPerformed
        JFrame toOkno=this;
        this.setVisible(false);
        try {
            Edycjaprofilu edycja=new Edycjaprofilu(toOkno,log);
        } catch (SQLException ex) {
            Logger.getLogger(AfterLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_edytujActionPerformed
    /**
     * Metoda pozwalajaca na sprawdzenie swoich rezerwacji dokonanych w okresie ostatnich 60 dni.
     * Dane sa zwracane chrono;logicznie od najnowszych zamówień az do najstarszych
     * @param evt 
     */
    private void rezerwacjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rezerwacjeActionPerformed
        JFrame stare=this;
        this.setVisible(false);
        HistoryOfReservation noweOkno1=new HistoryOfReservation(stare,log); 
    }//GEN-LAST:event_rezerwacjeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AfterLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AfterLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edytuj;
    private javax.swing.JLabel powitanie;
    private javax.swing.JButton rezerwacje;
    private javax.swing.JButton wyloguj;
    private javax.swing.JButton zamawiaj;
    // End of variables declaration//GEN-END:variables
}
